{
	"info": {
		"_postman_id": "a52235d4-710b-40f9-b3be-51c070ab7d3e",
		"name": "Test Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19896058"
	},
	"item": [
		{
			"name": "Checking behavior under heavy load",
			"item": [
				{
					"name": "Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code check\", function(){",
									"    pm.response.to.have.status(201)",
									"    ",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"Badoo\",\n    \"lastname\": \"Olamide\",\n    \"totalprice\": 232,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2025-02-04\",\n        \"checkout\": \"2015-04-17\"\n    },\n    \"additionalneeds\": \"Supper\"\n}\n//we need to get the ID that will be generated and use it in a GET request to see if we can extract it",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{rb_url}}/booking/",
							"host": [
								"{{rb_url}}"
							],
							"path": [
								"booking",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Created Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rb_url}}/booking/22",
							"host": [
								"{{rb_url}}"
							],
							"path": [
								"booking",
								"22"
							]
						}
					},
					"response": []
				}
			],
			"description": "Right click on the collection or the folder then click Run collection or Run folder respectively. Then set the number of iterations and"
		},
		{
			"name": "Writing automation scripts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 201\", function () {",
							"pm.response.to.have.status (201);",
							"});",
							"",
							"var fn =pm.variables.get(\"firstname\"); //Getting the value of we firstname from the csv",
							"var ln =pm.variables.get(\"lastname\");",
							"",
							"pm.test(\"Check first name \"+fn, function () {",
							"var server_response = pm.response.json();",
							"pm.expect(server_response.booking.firstname).to.eql(fn)});",
							"",
							"pm.test(\"Check last name \" +ln, function () {",
							"var server_response = pm.response.json();",
							"pm.expect (server_response.booking.lastname).to.eql(ln)});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"firstname\" : \"{{firstname}}\",\n\"lastname\" : \"{{lastname}}\",\n\"totalprice\" : 111,\n\"depositpaid\":true,\n\"bookingdates\": {\n        \"checkin\": \"2018-01-01\",\n        \"checkout\": \"2019-01-01\"\n                },\n\"additionalneeds\" : \"Launch\"\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{rb_url}}/booking/",
					"host": [
						"{{rb_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		}
	]
}